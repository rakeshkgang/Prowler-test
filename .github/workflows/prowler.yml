name: Prowler Security Scan

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  prowler:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Clean Environment
        run: |
          pip uninstall -y prowler boto3 botocore cryptography pyOpenSSL urllib3 || true

      - name: Install Prowler and Dependencies
        run: |
          pip install --upgrade pip
          pip install prowler
          pip install "pyOpenSSL>=22.0.0" "urllib3>=1.26.0"

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set aws_session_token "${{ secrets.AWS_SESSION_TOKEN }}"

      - name: Run Prowler JSON Scan
        id: prowler_json_scan
        run: |
          set -e
          report_prefix="prowler-output-$(date +%Y%m%d%H%M%S)"
          report_file_json="${report_prefix}.ocsf.json"
          error_file="error_json.log"

          echo "Running Prowler JSON checks..."

          # Run the Prowler scan for JSON output
          if timeout 600 prowler aws -c all --output-formats json-ocsf --output-filename "$report_prefix" --verbose > "$error_file" 2>&1; then
            if [[ -f "$report_file_json" ]]; then
              echo "JSON report created successfully."
              echo "scan_status=success" >> $GITHUB_ENV
            else
              echo "JSON report file was not created." | tee -a "$error_file"
              echo "scan_status=failed" >> $GITHUB_ENV
              exit 1
            fi
          else
            echo "JSON checks failed. See error log for details:" | tee -a "$error_file"
            cat "$error_file"
            echo "scan_status=failed" >> $GITHUB_ENV
            exit 1
          fi

      - name: Run Prowler CSV Scan
        id: prowler_csv_scan
        run: |
          set -e
          report_prefix="prowler-output-$(date +%Y%m%d%H%M%S)"
          report_file_csv="${report_prefix}.csv"
          error_file="error_csv.log"

          echo "Running Prowler CSV checks..."

          # Run the Prowler scan for CSV output
          if timeout 600 prowler aws -c all --output-formats csv --output-filename "$report_prefix" --verbose > "$error_file" 2>&1; then
            if [[ -f "$report_file_csv" ]]; then
              echo "CSV report created successfully."
            else
              echo "CSV report file was not created." | tee -a "$error_file"
              echo "scan_status=failed" >> $GITHUB_ENV
              exit 1
            fi
          else
            echo "CSV checks failed. See error log for details:" | tee -a "$error_file"
            cat "$error_file"
            echo "scan_status=failed" >> $GITHUB_ENV
            exit 1
          fi

      - name: Show Error Log
        if: failure()
        run: |
          echo "Error Log Contents:"
          if [[ -f error_json.log ]]; then
            cat error_json.log
          fi
          if [[ -f error_csv.log ]]; then
            cat error_csv.log
          fi

      - name: Send Reports to Slack
        if: env.scan_status == 'success'
        run: |
          echo "Sending reports to Slack..."

          # Function to send a file to Slack
          send_file_to_slack() {
            local file_path=$1
            local comment=$2
            local response=$(curl -s -F file=@${file_path} -F "initial_comment=${comment}" -F channels=${{ secrets.SLACK_CHANNEL_ID }} -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload)

            if [[ $(echo "$response" | jq -r '.ok') != "true" ]]; then
              echo "Failed to send ${comment}: $(echo "$response" | jq -r '.error')"
              exit 1
            else
              echo "${comment} sent to Slack successfully."
            fi
          }

          # Check and send JSON report file
          report_file_json="prowler-output-*.ocsf.json"
          if ls $report_file_json 1> /dev/null 2>&1; then
            send_file_to_slack "$report_file_json" "Prowler Scan JSON Report"
          else
            echo "JSON report file not found. Skipping."
          fi

          # Check and send CSV report file
          report_file_csv="prowler-output-*.csv"
          if ls $report_file_csv 1> /dev/null 2>&1; then
            send_file_to_slack "$report_file_csv" "Prowler Scan CSV Report"
          else
            echo "CSV report file not found. Skipping."
          fi
