name: Prowler Security Scan

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  prowler:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Clean Environment
        run: |
          pip uninstall -y prowler boto3 botocore cryptography pyOpenSSL || true

      - name: Install Prowler with Compatible Versions
        run: |
          pip install --upgrade pip
          pip install "boto3>=1.26.17,<1.27.0" "botocore>=1.29.0,<1.30.0" prowler

      - name: Configure AWS Credentials
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set aws_session_token "${{ secrets.AWS_SESSION_TOKEN }}"
          aws configure set region eu-north-1  # Ensure this is your desired region

      - name: Run Prowler Scan
        id: prowler_scan
        run: |
          set -e
          report_prefix="prowler-output-$(date +%Y%m%d%H%M%S)"
          report_file_json="${report_prefix}.ocsf.json"
          report_file_csv="${report_prefix}.csv"
          error_file="error_all_checks.log"
          
          echo "Running all checks..."
          if timeout 300 prowler aws -c all --output-formats json-ocsf --output-filename "$report_file_json" --verbose > "$error_file"; then
            # Run CSV output as well, even if JSON output has no findings
            prowler aws -c all --output-formats csv --output-filename "$report_file_csv" || true
            
            # Check if report files were created
            if [[ -f "$report_file_json" && -f "$report_file_csv" ]]; then
              echo "All checks completed successfully."
              echo "scan_status=success" >> $GITHUB_ENV
            else
              echo "One or both report files were not created."
              echo "scan_status=failed" >> $GITHUB_ENV
              exit 1
            fi
          else
            echo "Checks failed. See error log for details:"
            cat "$error_file"
            echo "scan_status=failed" >> $GITHUB_ENV
            exit 1
          fi

          # Debugging: List current directory contents
          echo "Current directory contents:"
          ls -l

      - name: Send Reports to Slack
        if: env.scan_status == 'success'
        run: |
          # Prepare the message with links to the reports
          echo "Sending reports to Slack..."

          # Send JSON report file
          response_json=$(curl -s -F file=@${report_file_json} -F "initial_comment=Prowler Scan JSON Report" -F channels=${{ secrets.SLACK_CHANNEL_ID }} -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload)

          if [[ $(echo "$response_json" | jq -r '.ok') != "true" ]]; then
            echo "Failed to send JSON report to Slack: $(echo "$response_json" | jq -r '.error')"
            exit 1
          else
            echo "JSON report sent to Slack successfully."
          fi

          # Send CSV report file
          response_csv=$(curl -s -F file=@${report_file_csv} -F "initial_comment=Prowler Scan CSV Report" -F channels=${{ secrets.SLACK_CHANNEL_ID }} -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" https://slack.com/api/files.upload)

          if [[ $(echo "$response_csv" | jq -r '.ok') != "true" ]]; then
            echo "Failed to send CSV report to Slack: $(echo "$response_csv" | jq -r '.error')"
            exit 1
          else
            echo "CSV report sent to Slack successfully."
          fi
